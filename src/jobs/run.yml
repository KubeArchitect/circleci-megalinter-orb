description: >
  This CircleCI orb integrates MegaLinter into your CI/CD pipeline.
  MegaLinter is a tool that helps you maintain code quality by automatically
  running linters and formatters on your codebase. This orb provides a job
  to run MegaLinter on your project, with options to persist the linter reports,
  run git operations to commit and push automatic fixes, and customize various
  parameters such as Git user details and commit messages.

parameters:
  resource_class:
    type: string
    default: medium
    description: |
      The resource class to use for the jobs.
      See list of resource classes here:
      https://circleci.com/docs/2.0/configuration-reference/#resource_class
  tag:
    type: string
    default: latest
    description: |
      Choose a specific tag of megalinter:
      https://hub.docker.com/r/oxsecurity/megalinter/tags
  flavor:
    type: string
    default: ""
    description: |
      Choose a specific flavor of megalinter:
      https://megalinter.io/latest/flavors/
      Pull Requests are welcome to add more flavors!
  github_token:
    type: env_var_name
    default: GITHUB_TOKEN
    description: |
      GitHub token to use for the reporters in megalinter
  dockerhub_username:
    type: env_var_name
    default: DOCKERHUB_USERNAME
    description: |
      Docker Hub username to use for megalinter
  dockerhub_password:
    type: env_var_name
    default: DOCKERHUB_PASSWORD
    description: |
      Docker Hub password to use for megalinter
  parallelism:
    type: integer
    default: 1
    description: |
      Number of parallel executors to use
  persist_megalinter_reports:
    type: boolean
    default: false
    description: |
      Whether to persist the megalinter-reports folder for use in subsequent jobs.
      This can be useful for automatically updating files in your repository based on the linter's output.
  entrypoint:
    type: string
    default: "/entrypoint.sh"
    description: |
      Change entrypoint of megalinter
  run_git_operations:
    type: boolean
    default: false
    description: |
      Whether to run git operations to commit and push changes
  git_pr_commit_message:
    type: string
    default: "Automated linting fixes by MegaLinter"
    description: |
      Commit message to use for Git
  git_pr_title:
    type: string
    default: "[MegaLinter] Apply linters automatic fixes"
    description: |
      Title to use for the pull request
  git_pr_branch_name:
    type: string
    default: "megalinter-fixes-$CIRCLE_BUILD_NUM"
    description: |
      Branch name to use for Git

docker:
  - image: oxsecurity/megalinter<<#parameters.flavor>>-<<parameters.flavor>><</parameters.flavor>>:<<parameters.tag>>
    auth:
      username: <<parameters.dockerhub_username>>
      password: <<parameters.dockerhub_password>>

resource_class: <<parameters.resource_class>>
parallelism: <<parameters.parallelism>>

steps:
  - checkout
  - run_megalinter:
      persist_megalinter_reports: <<parameters.persist_megalinter_reports>>
      github_token: <<parameters.github_token>>
  - when:
      condition:
        and:
          - equal: [ true, <<parameters.run_git_operations>> ]
          - equal: [ true, <<parameters.persist_megalinter_reports>> ]
          - equal: [ main, << pipeline.git.branch >> ]
      steps:
        - run_git:
            run_git_operations: <<parameters.run_git_operations>>
            github_token: <<parameters.github_token>>
            git_pr_commit_message: <<parameters.git_pr_commit_message>>
            git_pr_title: <<parameters.git_pr_title>>
            git_pr_branch_name: <<parameters.git_pr_branch_name>>